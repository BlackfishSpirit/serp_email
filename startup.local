# Claude Code Startup Checklist
# This file is for Claude's reference to ensure all required services are running

## REQUIRED SERVICES CHECKLIST

### 1. Git Repository Sync
- Command: `git pull origin main`
- Purpose: Sync with remote repository for team collaboration
- Check: Verify clean git status

### 2. Docker Services
- Command: `docker ps`
- Expected containers (4 total):
  - shipsmind-speckit-postgres-dev (port 5433) - HEALTHY
  - shipsmind-speckit-redis-dev (port 6379) - HEALTHY
  - shipsmind-speckit-portainer-dev (port 9000) - UP
  - shipsmind-speckit-mailhog-dev (ports 1025,8025) - UP
- Start if not running: `pnpm docker:dev`
- Verify database connectivity: Test port 5433 connection

### 3. Development Server
- Command: `pnpm dev` (run in background)
- Expected: Next.js server on http://localhost:3000
- Verify: HTTP 200 response from localhost:3000
- Check compilation success and no critical errors

### 4. MCP Server Status
- Command: `claude mcp list`
- Expected ALL connected (7 total):
  - ✓ playwright: Browser automation & testing
  - ✓ context7: Up-to-date documentation
  - ✓ github: GitHub repository integration
  - ✓ shadcn: shadcn/ui component library
  - ✓ linear: Linear project management
  - ✓ semgrep: Security vulnerability scanning
  - ✓ supabase: Backend database integration
- If any fail: Check API keys and package installations

## STARTUP SEQUENCE

1. **Check Git Status**
   ```bash
   git status
   git pull origin main
   ```

2. **Start Docker Services**
   ```bash
   docker ps
   # If containers not running:
   pnpm docker:dev
   ```

3. **Verify Database**
   ```bash
   # Test database connectivity (port 5433)
   # PowerShell: Test-NetConnection -ComputerName localhost -Port 5433
   ```

4. **Start Development Server**
   ```bash
   pnpm dev &
   # Wait for "Ready in Xs" message
   # Verify: curl http://localhost:3000
   ```

5. **Verify MCP Servers**
   ```bash
   claude mcp list
   # All 7 servers should show ✓ Connected
   ```

## SERVICE URLS FOR VERIFICATION

- Main App: http://localhost:3000
- Workflow Dashboard: http://localhost:3000/dev/workflow
- Feature Dashboard: http://localhost:3000/dev/features
- Database Admin: pnpm db:studio
- Docker Management: http://localhost:9000
- Email Testing: http://localhost:8025

## ENVIRONMENT REQUIREMENTS

Required in .env.local:
- DATABASE_URL (PostgreSQL connection)
- LINEAR_API_KEY (for Linear MCP server)
- SUPABASE_ACCESS_TOKEN (for Supabase MCP server)

## USER CONTEXT

### Linear Integration
- **User ID**: 214bd69e-98ca-4f45-8b8e-52e90f5c8714
- **Email**: mat.gifford@gmail.com
- **Name**: mat.gifford@gmail.com
- **Use for**: Linear issue assignments and project management

## TROUBLESHOOTING QUICK FIXES

### Docker Issues:
```bash
pnpm docker:down
pnpm docker:dev
```

### Database Issues:
```bash
pnpm db:generate
pnpm db:push
```

### MCP Server Issues:
- Check API keys in .env.local
- Verify package installations (semgrep, semgrep-mcp)
- Restart Claude Code if needed

### Development Server Issues:
```bash
# Kill existing processes on port 3000
# Restart with: pnpm dev
```

## SUCCESS CRITERIA

✅ All Docker containers healthy and running
✅ Development server responding with HTTP 200
✅ All 7 MCP servers connected
✅ No critical compilation errors
✅ Database accessible on port 5433

When all criteria met, development environment is ready.