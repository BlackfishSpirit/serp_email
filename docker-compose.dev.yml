version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: shipsmind-speckit-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_USER: speckit_user
      POSTGRES_PASSWORD: speckit_password
      POSTGRES_DB: shipsmind_speckit_development
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - speckit-network
    healthcheck:
      test:
        ["CMD-SHELL", "pg_isready -U speckit_user -d shipsmind_speckit_development"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: shipsmind-speckit-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - speckit-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Portainer for container management
  portainer:
    image: portainer/portainer-ce:latest
    container_name: shipsmind-speckit-portainer-dev
    restart: unless-stopped
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - speckit-network

  # MailHog for email testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: shipsmind-speckit-mailhog-dev
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - speckit-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  portainer_data:
    driver: local

networks:
  speckit-network:
    driver: bridge