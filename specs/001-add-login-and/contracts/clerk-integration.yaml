openapi: 3.0.3
info:
  title: Clerk Integration Contracts
  description: Expected behavior contracts for Clerk service integration
  version: 1.0.0

paths:
  # These are not actual API endpoints, but behavior contracts for Clerk integration

  /clerk/sign-up:
    post:
      summary: User Registration Contract
      description: Expected behavior for user registration flow via Clerk
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpRequest'
      responses:
        '200':
          description: Registration successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignUpResponse'
        '400':
          description: Invalid registration data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Email already exists or validation failed

  /clerk/sign-in:
    post:
      summary: User Login Contract
      description: Expected behavior for user login flow via Clerk
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInResponse'
        '401':
          description: Invalid credentials
        '423':
          description: Account locked due to failed attempts

  /clerk/session-validation:
    get:
      summary: Session Validation Contract
      description: Expected behavior for session validation
      security:
        - ClerkSession: []
      responses:
        '200':
          description: Valid session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionValidation'
        '401':
          description: Invalid or expired session

components:
  securitySchemes:
    ClerkSession:
      type: apiKey
      in: header
      name: Authorization

  schemas:
    SignUpRequest:
      type: object
      required:
        - emailAddress
        - password
      properties:
        emailAddress:
          type: string
          format: email
          description: User's email address (must pass deliverability check)
        password:
          type: string
          minLength: 8
          description: Password meeting complexity requirements
        firstName:
          type: string
          description: User's first name (optional)
        lastName:
          type: string
          description: User's last name (optional)

    SignUpResponse:
      type: object
      properties:
        id:
          type: string
          description: Clerk user ID
        emailAddress:
          type: string
          description: Registered email address
        emailVerified:
          type: boolean
          description: Email verification status (initially false)
        createdAt:
          type: string
          format: date-time
        sessionId:
          type: string
          description: Initial session ID

    SignInRequest:
      type: object
      required:
        - identifier
        - password
      properties:
        identifier:
          type: string
          description: Email address or username
        password:
          type: string
          description: User's password

    SignInResponse:
      type: object
      properties:
        sessionId:
          type: string
          description: New session ID
        user:
          $ref: '#/components/schemas/ClerkUser'
        expiresAt:
          type: string
          format: date-time
          description: Session expiration time (30 minutes from login)

    SessionValidation:
      type: object
      properties:
        valid:
          type: boolean
          description: Whether session is valid
        user:
          $ref: '#/components/schemas/ClerkUser'
        expiresAt:
          type: string
          format: date-time
        lastActiveAt:
          type: string
          format: date-time

    ClerkUser:
      type: object
      properties:
        id:
          type: string
          description: Clerk user ID
        emailAddresses:
          type: array
          items:
            $ref: '#/components/schemas/EmailAddress'
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        imageUrl:
          type: string
          description: Profile image URL
        createdAt:
          type: string
          format: date-time
        lastSignInAt:
          type: string
          format: date-time

    EmailAddress:
      type: object
      properties:
        emailAddress:
          type: string
          format: email
        verification:
          $ref: '#/components/schemas/VerificationObject'

    VerificationObject:
      type: object
      properties:
        status:
          type: string
          enum: [verified, unverified]
        strategy:
          type: string
          enum: [email_code, email_link]

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message
        code:
          type: string
          description: Error code
        details:
          type: object
          description: Additional error details

# Expected Integration Behaviors
x-integration-contracts:
  password-policy:
    description: "Password must be minimum 8 characters with letters, numbers, and symbols"
    validation-rules:
      - minLength: 8
      - requiresLetters: true
      - requiresNumbers: true
      - requiresSymbols: true

  account-lockout:
    description: "Account locked after 5 consecutive failed login attempts"
    lockout-rules:
      - maxAttempts: 5
      - lockoutDuration: "15 minutes"
      - resetOnSuccessfulLogin: true

  session-timeout:
    description: "Sessions expire after 30 minutes of inactivity"
    timeout-rules:
      - idleTimeout: "30 minutes"
      - extendOnActivity: true
      - warningAt: "25 minutes"

  email-verification:
    description: "Email verification required for sensitive features"
    verification-rules:
      - basicAccess: "no verification required"
      - sensitiveFeatures: "verification required"
      - deliverabilityCheck: true