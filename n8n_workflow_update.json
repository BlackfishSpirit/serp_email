{
  "name": "Create Intro Email v4 - Bulk Processing",
  "settings": {},
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [-2160, 144],
      "id": "fbbbb663-f576-46a8-85dd-b19ddbcb1b56",
      "name": "When clicking 'Test workflow'"
    },
    {
      "parameters": {
        "path": "bulk-leads-webhook",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [-2624, -400],
      "id": "bulk-webhook-001",
      "name": "Bulk Leads Webhook",
      "webhookId": "bulk-leads-webhook-001"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "867074be-4fff-4db7-93a8-63aa1c9385be",
              "name": "account_number",
              "value": "={{ $json.query.account_number }}",
              "type": "number"
            },
            {
              "id": "e2db71c9-058a-47a1-a182-4672fa69c763",
              "name": "email_count",
              "value": "={{ $json.query.email_count }}",
              "type": "number"
            },
            {
              "id": "78be13fd-55da-45bf-998c-7768f942ffa0",
              "name": "include_sig",
              "value": "={{ $json.query.include_sig }}",
              "type": "boolean"
            },
            {
              "id": "a060c3b8-2dd9-43cc-9d7c-cda557049d12",
              "name": "include_unsub",
              "value": "={{ $json.query.include_unsub }}",
              "type": "boolean"
            },
            {
              "id": "ac1843c5-b1a6-49a7-a2d3-5d8c7f045cdf",
              "name": "email_region",
              "value": "={{ $json.query.email_region?.trim() || '' }}",
              "type": "string"
            },
            {
              "id": "c2fc24e4-2e2e-47ba-b58c-b5c2213fc13a",
              "name": "user_token",
              "value": "={{ $json.headers.authorization?.replace('Bearer ', '') }}",
              "type": "string"
            },
            {
              "id": "lead-ids-config",
              "name": "lead_ids",
              "value": "={{ $json.query.lead_ids }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [-2320, -400],
      "id": "bulk-webhook-config",
      "name": "Bulk Webhook Config"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT id, cid, Title, URL, Address, gen_profile, created_at, updated_at FROM serp_leads_v2 WHERE id IN ({{ $json.lead_ids.map((id, pos) => '$' + (pos+1)).join(', ') }})",
        "additionalFields": {
          "queryParameters": "={{ $json.lead_ids }}"
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [-2000, -400],
      "id": "bulk-postgres-query",
      "name": "Get Bulk Leads Data",
      "credentials": {
        "postgres": {
          "id": "postgres-credential-id",
          "name": "PostgreSQL Database"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Transform PostgreSQL results to match loop format\nconst webhookData = items[0].json;\nconst leadResults = items.slice(1);\n\nconst transformedItems = leadResults.map(leadItem => {\n  return {\n    json: {\n      // Preserve webhook configuration\n      account_number: webhookData.account_number,\n      email_count: webhookData.email_count,\n      include_sig: webhookData.include_sig,\n      include_unsub: webhookData.include_unsub,\n      email_region: webhookData.email_region,\n      user_token: webhookData.user_token,\n      \n      // Add lead-specific data (match existing field names)\n      id: leadItem.json.id,\n      cid: leadItem.json.cid,\n      Title: leadItem.json.Title,\n      URL: leadItem.json.URL,\n      Address: leadItem.json.Address,\n      gen_profile: leadItem.json.gen_profile || '',\n      created_at: leadItem.json.created_at,\n      updated_at: leadItem.json.updated_at\n    }\n  };\n});\n\nreturn transformedItems;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [-1680, -400],
      "id": "bulk-data-transformer",
      "name": "Transform Bulk Data"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [-1400, -400],
      "id": "bulk-merge-data",
      "name": "Bulk Merge Data"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"Subject Line\":\"text\",\n\t\"message\":\"text\"\n}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [1584, 144],
      "id": "4c367b97-b3b6-4894-9d20-296e277b158f",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e450d6ce-d84e-4139-a7a1-9e22011d8ff0",
              "name": "output.message",
              "value": "={{ $json.output.message.replaceAll('â€”', ', ').replaceAll(' ,  ', ', ') }}",
              "type": "string"
            },
            {
              "id": "efe31e8b-9a31-4986-8904-80ad40eccb0f",
              "name": "output['Subject Line']",
              "value": "={{ $json.output['Subject Line'] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [1696, -64],
      "id": "9aca72f5-74c8-4a62-b01f-ca07245729c1",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0619bc68-673f-4338-acf3-59c8eff62041",
              "name": "sender_business",
              "value": "Blackfish Distillery",
              "type": "string"
            },
            {
              "id": "d48d3e05-3676-457d-b0d7-9fa2437247e9",
              "name": "sender_url",
              "value": "blackfishdistillery.com",
              "type": "string"
            },
            {
              "id": "686ceba1-1c49-4949-80d1-8727943cf7a8",
              "name": "sender_address",
              "value": "420 37th St NW Ste. A.  Auburn, WA 98001",
              "type": "string"
            },
            {
              "id": "f3170d1e-a165-427c-8d88-3ae0dd765315",
              "name": "receiver_business",
              "value": "Spunky Monkey Bar & Grill",
              "type": "string"
            },
            {
              "id": "3c6c66d4-f922-4bf5-a83e-44d8bedf05e3",
              "name": "receiver_url",
              "value": "https://www.spunkymonkeybarandgrill.com/",
              "type": "string"
            },
            {
              "id": "cac0c195-5244-4f2a-82a8-a44e7199f29f",
              "name": "receiver_address",
              "value": "124 2nd St. SE.  Auburn, WA 98002 ",
              "type": "string"
            },
            {
              "id": "a163714f-c042-42f2-988a-eb03af9614b5",
              "name": "intro_goal",
              "value": "sell them spirits",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [-48, 592],
      "id": "26c0b741-9460-43c3-82cf-6fca7e42d2aa",
      "name": "Config"
    },
    {
      "parameters": {
        "model": "=openai/gpt-4.1-mini:online",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [-624, 752],
      "id": "bb5bbd0d-144d-420b-a624-512718f40d7d",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "Zxme10zMkcpc2LQh",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Write the profile of {{ $json.sender_business }} at {{ $json.sender_address }}",
        "options": {
          "systemMessage": "=You are an experienced business analyst tasked with creating a comprehensive company profile based on website content. Your goal is to provide an accurate, professional, and concise summary of a business.\n\nHere is the URL you need to analyze:\n\n<company_url>\n{{ $json.sender_url }}\n</company_url>\n\nPlease follow these steps to create a business profile:\n\n1. Examine the main URL thoroughly, focusing on:\n   - Company name and taglines\n   - Products or services offered\n   - Company history and \"About Us\" information\n   - Mission statement and core values\n   - Contact information and locations\n   - Notable achievements and unique selling points\n\n2. Identify and examine up to 5 internal links within the main URL that provide additional company information. These may include:\n   - Product/service pages\n   - Team or leadership pages\n   - Blog posts or news articles\n   - Customer testimonials or case studies\n   Do not follow external links or social media profiles.\n\n3. Based on your findings, analyze the information you've gathered. Conduct your analysis within <company_analysis> tags, organizing your thoughts and compiling key information for each of the following profile sections:\n\n   a) Introduction to the company\n   b) Company history and milestones\n   c) Detailed description of main products or services\n   d) Company culture, values, and leadership\n   e) Market position, awards, and unique attributes\n\n   For each section:\n   - List relevant quotes from the website\n   - Summarize key points\n\n   Aim to identify enough information to write 5-7 sentences for each paragraph in the final profile.\n\n4. After your analysis, create a 5-paragraph profile. Each paragraph should focus on a different aspect of the business, as outlined in step 3. Maintain a professional and objective tone throughout the profile. Do not include personal opinions or subjective assessments. Rely solely on the information provided on the website and its internal links.\n\n5. Count the number of sentences in each paragraph to ensure they meet the 5-7 sentence requirement. If a paragraph is too short or too long, adjust it accordingly.\n\n6. Present your final profile using the following format:\n\n<business_profile>\n<paragraph1>\n[First paragraph: 5-7 sentences introducing the company]\n</paragraph1>\n<paragraph2>\n[Second paragraph: 5-7 sentences on company history]\n</paragraph2>\n<paragraph3>\n[Third paragraph: 5-7 sentences describing products/services]\n</paragraph3>\n<paragraph4>\n[Fourth paragraph: 5-7 sentences on culture and values]\n</paragraph4>\n<paragraph5>\n[Fifth paragraph: 5-7 sentences on market position and conclusion]\n</paragraph5>\n</business_profile>\n\nImportant: In your final response, include ONLY the business profile paragraphs within the <business_profile> tags. Do not include your company analysis or any other analysis in the output.\n\nIf you encounter any difficulties accessing the website or finding sufficient information, state this clearly at the beginning of your <business_profile> section, explaining the issues you faced and how they might affect the completeness of the profile."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [-624, 592],
      "id": "bcf0bcdd-7fdc-4c75-82a8-6afffd364738",
      "name": "Sender Profile"
    },
    {
      "parameters": {
        "model": "=openai/gpt-4.1-mini:online",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [544, -240],
      "id": "36a9c853-ebeb-4536-b145-a69ffc481a14",
      "name": "OpenRouter Chat Model1",
      "credentials": {
        "openRouterApi": {
          "id": "Zxme10zMkcpc2LQh",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Write the profile of {{ $json.Title }} at {{ $json.Address }}",
        "options": {
          "systemMessage": "=You are an experienced business analyst tasked with creating a comprehensive company profile based on current live website content. Your goal is to provide an accurate, professional, and detailed summary of a business.\n\nHere is the URL you need to analyze:\n\n<company_url>\n{{ $json.URL }}\n</company_url>\n\nPlease follow these steps to create a business profile:\n\n1. Examine the main URL thoroughly, focusing on:\n   - Company name and taglines\n   - Products or services offered\n   - Company history and \"About Us\" information\n   - Mission statement and core values\n   - Contact information and locations\n   - Notable achievements and unique selling points\n   - Pay close attention to the phrasing of products and services. For visual marketing purposes, multiple items and/or services might be described in a single phrase even if the items/services are unrelated. This might appear as a nonsensical phrase that only makes sense when broken apart into separate items and/or services. (For example: Area's Best Gin Cocktail Nachos is referring to the best Gin Cocktail and best Nachos in the area.)\n\n2. Identify and examine up to 5 internal links within the main URL that provide additional company information. These may include:\n   - Product/service pages\n   - Team or leadership pages\n   - Blog posts or news articles\n   - Customer testimonials or case studies\n   Do not follow external links or social media profiles.\n\n3. Based on your findings, analyze the information you've gathered. Compile key information for each of the following profile sections:\n\n   a) Introduction to the company\n   b) Company history and milestones\n   c) Detailed description of main products or services\n   d) Company culture, values, and leadership\n   e) Market position, awards, and unique attributes\n\n   For each section:\n   - List relevant quotes from the website\n   - Summarize key points\n\n   Aim to identify enough information to write 5-7 sentences for each paragraph in the final profile.\n\n4. Create a 5-paragraph profile. Each paragraph should focus on a different aspect of the business, as outlined in step 3. Maintain a professional and objective tone throughout the profile. Do not include personal opinions or subjective assessments. Rely solely on the information provided on the website and its internal links.\n\n5. Count the number of sentences in each paragraph to ensure they meet the 5-7 sentence requirement. If a paragraph is too short or too long, adjust it accordingly.\n\n6. Present your final profile using the following format:\n\n<business_profile>\n<paragraph1>\n[First paragraph: 5-7 sentences introducing the company]\n</paragraph1>\n<paragraph2>\n[Second paragraph: 5-7 sentences on company history]\n</paragraph2>\n<paragraph3>\n[Third paragraph: 5-7 sentences describing products/services]\n</paragraph3>\n<paragraph4>\n[Fourth paragraph: 5-7 sentences on culture and values]\n</paragraph4>\n<paragraph5>\n[Fifth paragraph: 5-7 sentences on market position and conclusion]\n</paragraph5>\n</business_profile>\n\nImportant: In your final response, include ONLY the business profile paragraphs within the <business_profile> tags. Do not include your company analysis or any other analysis in the output.\n\nIf you encounter any difficulties accessing the website or finding sufficient information, respond with a profile containing as much information as you have available without addressing the missing portions. If no information is available to generate a profile, your complete output should be \"Insufficient information available at {{ $json.URL }}.\" with no other explanation."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [544, -384],
      "id": "9339fe60-cb94-4d06-872c-e21755368f29",
      "name": "Receiver Profile"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [1152, -64],
      "id": "e51305d3-4e6d-4384-8623-a8ea77f34c1c",
      "name": "Merge"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5a389fd8-1d9c-4e19-8266-da38df4dad59",
              "name": "sender_profile",
              "value": "={{ $json.output.replace(/<[^>]*>/g, '') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [-336, 592],
      "id": "3af7ffc8-72af-4635-8552-9cccd639297a",
      "name": "sender_profile"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "bd775696-eb83-4d90-ad19-7f5718782962",
              "name": "receiver_profile",
              "value": "={{ $json.output.replace(/<[^>]*>/g, '') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [1168, -320],
      "id": "7d7b1d3a-f9d3-43ef-86f5-e590a55ad267",
      "name": "receiver_profile"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [1360, 144],
      "id": "25118c5d-2d2e-4424-9150-cbf055a37be1",
      "name": "OpenRouter Chat Model2",
      "credentials": {
        "openRouterApi": {
          "id": "Zxme10zMkcpc2LQh",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "user_accounts",
        "filters": {
          "conditions": [
            {
              "keyName": "account_number",
              "keyValue": "={{ $json.account_number }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [-1536, -128],
      "id": "260555b1-7244-47d3-bb56-7f45570f9547",
      "name": "Get a row",
      "credentials": {
        "supabaseApi": {
          "id": "GPW5uksP6EOYqEBU",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "bd775696-eb83-4d90-ad19-7f5718782962",
              "name": "receiver_profile",
              "value": "={{ $json.gen_profile }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [544, -96],
      "id": "09e42b57-c0c3-4068-bf27-1ddf66dca50e",
      "name": "receiver_profile1"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "serp_leads_v2",
        "filters": {
          "conditions": [
            {
              "keyName": "cid",
              "condition": "eq",
              "keyValue": "={{ $json.cid }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "gen_profile",
              "fieldValue": "={{ $json.output.replace(/<[^>]*>/g, '') }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [1424, -480],
      "id": "e705ba6c-1195-467f-bf45-b26cbe2882f8",
      "name": "Update profile",
      "credentials": {
        "supabaseApi": {
          "id": "GPW5uksP6EOYqEBU",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d8e799f9-dd01-43dc-ab21-9910f9cbfd36",
              "leftValue": "={{ $json.gen_profile }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [272, -448],
      "id": "ae38b9ea-cbd3-4e6b-8902-c0e987a4a64d",
      "name": "If gen_profile is empty"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f5d3918f-0c03-4227-84ce-4ceaa4b76557",
              "name": "user_id",
              "value": "={{ $json.id }}",
              "type": "number"
            },
            {
              "id": "86fea17c-9586-40ac-89ae-fb9e0b86ec3b",
              "name": "created_at",
              "value": "={{ $json.created_at }}",
              "type": "string"
            },
            {
              "id": "26b94368-4875-4ca4-aa1b-98a1fb77527e",
              "name": "account_number",
              "value": "={{ $json.account_number }}",
              "type": "number"
            },
            {
              "id": "a6ee6fc9-2b27-4713-9b0d-f03206a6baf3",
              "name": "business_name",
              "value": "={{ $json.business_name }}",
              "type": "string"
            },
            {
              "id": "92adeadf-320b-4757-a084-05eb459ba915",
              "name": "business_address",
              "value": "={{ $json.business_address }}",
              "type": "string"
            },
            {
              "id": "7d027316-81de-4662-9b2c-fbbae99e0221",
              "name": "business_url",
              "value": "={{ $json.business_url }}",
              "type": "string"
            },
            {
              "id": "6804e9d5-2046-46e8-822b-8c8b471a8e35",
              "name": "business_profile_sender",
              "value": "={{ $json.business_profile }}",
              "type": "string"
            },
            {
              "id": "caa33e06-666a-4105-9547-31b390747fd9",
              "name": "CID_Links_exc",
              "value": "={{ $json.CID_Links_exc }}",
              "type": "string"
            },
            {
              "id": "ccbbb5a2-1d98-4e82-a9b5-3cfba5cebf56",
              "name": "email_current_goal",
              "value": "={{ $json.email_current_goal }}",
              "type": "string"
            },
            {
              "id": "39f965f4-5ac5-4b37-8983-2d08c9cd1396",
              "name": "email_sig",
              "value": "={{ $json.email_sig }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [-1344, -128],
      "id": "7b546b60-6a83-4c1d-b1e9-86f4ace26391",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "serp_leads_v2",
        "filters": {
          "conditions": [
            {
              "keyName": "cid",
              "keyValue": "={{ $json.cid }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [16, -272],
      "id": "b40b1316-f92b-4c04-9162-1af3f0556667",
      "name": "Get a row1",
      "credentials": {
        "supabaseApi": {
          "id": "GPW5uksP6EOYqEBU",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0619bc68-673f-4338-acf3-59c8eff62041",
              "name": "sender_business",
              "value": "={{ $json.business_name }}",
              "type": "string"
            },
            {
              "id": "d48d3e05-3676-457d-b0d7-9fa2437247e9",
              "name": "sender_url",
              "value": "={{ $json.business_url }}",
              "type": "string"
            },
            {
              "id": "686ceba1-1c49-4949-80d1-8727943cf7a8",
              "name": "sender_address",
              "value": "={{ $json.business_address }}",
              "type": "string"
            },
            {
              "id": "f3170d1e-a165-427c-8d88-3ae0dd765315",
              "name": "receiver_business",
              "value": "={{ $json.Title }}",
              "type": "string"
            },
            {
              "id": "3c6c66d4-f922-4bf5-a83e-44d8bedf05e3",
              "name": "receiver_url",
              "value": "={{ $json.URL }}",
              "type": "string"
            },
            {
              "id": "cac0c195-5244-4f2a-82a8-a44e7199f29f",
              "name": "receiver_address",
              "value": "={{ $json.Address }}",
              "type": "string"
            },
            {
              "id": "a163714f-c042-42f2-988a-eb03af9614b5",
              "name": "intro_goal",
              "value": "={{ $json.email_current_goal }}",
              "type": "string"
            },
            {
              "id": "903f9ce5-80e9-4ad9-a205-68c298f4bc48",
              "name": "sender_profile",
              "value": "={{ $json.business_profile_sender }}",
              "type": "string"
            },
            {
              "id": "3d203aef-0837-42c4-8859-15ef865bdb48",
              "name": "email_sig",
              "value": "={{ $json.email_sig }}",
              "type": "string"
            },
            {
              "id": "4a900eb0-949d-4caa-b290-355261ea2bf3",
              "name": "include_sig",
              "value": "={{ $json.include_sig }}",
              "type": "boolean"
            },
            {
              "id": "56c7d6ad-374f-40e7-bcdf-5df26a82d0f7",
              "name": "include_unsub",
              "value": "={{ $json.include_unsub }}",
              "type": "boolean"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [784, -16],
      "id": "c343da2b-e0ac-429a-94b8-4022dae32e6d",
      "name": "Config1"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [64, 32],
      "id": "bfe273a5-6d90-4148-a53e-197818b21f82",
      "name": "Merge1"
    },
    {
      "parameters": {
        "content": "## ToDo \nAdd credit check and nodes to set number of executions from webhook input\nAdd option to generate email for a chosen business",
        "width": 544
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [-912, -528],
      "id": "30c25358-0b22-437c-97a2-5c4af934dfa5",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [-368, -80],
      "id": "a5a64f0d-109b-4a12-babb-b2419297e377",
      "name": "Loop"
    },
    {
      "parameters": {
        "content": "### Make part of onboarding",
        "height": 352,
        "width": 544
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [-688, 544],
      "id": "545c57c6-81e7-454b-9fef-3a77bf6377c9",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [1248, -480],
      "id": "7ec44abc-d908-4729-b786-1b25487ace87",
      "name": "Merge2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "389d01ca-04e2-448d-a611-5b4730d2f51f",
              "leftValue": "={{ $json.output }}",
              "rightValue": "Insufficient information available",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "ignoreCase": true
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [880, -304],
      "id": "50f83b6b-6692-4807-9d88-a8ba5d404e1d",
      "name": "If"
    },
    {
      "parameters": {
        "tableId": "email_drafts",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "created_at",
              "fieldValue": "={{ $now }}"
            },
            {
              "fieldId": "Intro_date",
              "fieldValue": "={{ $now }}"
            },
            {
              "fieldId": "Intro_subject",
              "fieldValue": "={{ $json.output['Subject Line'] }}"
            },
            {
              "fieldId": "Intro_message",
              "fieldValue": "={{ $json.output.message }}"
            },
            {
              "fieldId": "Intro_goal",
              "fieldValue": "={{ $json.email_current_goal }}"
            },
            {
              "fieldId": "user_id",
              "fieldValue": "={{ $json.user_id }}"
            },
            {
              "fieldId": "lead_id",
              "fieldValue": "={{ $json.id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [1968, 240],
      "id": "a463dd7b-5f61-4131-991a-b476250d0139",
      "name": "Create a row",
      "credentials": {
        "supabaseApi": {
          "id": "GPW5uksP6EOYqEBU",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [1760, 240],
      "id": "973ee66c-f3e2-4d19-a175-ed23c21a14d9",
      "name": "Merge3"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [-736, -80],
      "id": "acc2e39a-47de-4068-a58c-89f3dc0fac7a",
      "name": "Merge4"
    },
    {
      "parameters": {
        "path": "5b0618a3-32d2-40b1-a311-8bd24b8f48e6",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [-2624, -112],
      "id": "ff81e172-0c13-41b8-a7dd-1e2b9466cfdb",
      "name": "Webhook",
      "webhookId": "5b0618a3-32d2-40b1-a311-8bd24b8f48e6"
    },
    {
      "parameters": {
        "content": "Set account_number(#), email_count(#), include_sig(t/f), include_unsub(t/f), and email_region(case sensitive name of city or state as it appears in the address) fields in the body and include  auth headers"
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [-2176, 320],
      "id": "a4312815-ddee-43ac-8d73-327d8bbcce4a",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5cb1d551-34d3-411d-ac96-8bdeaf22181a",
              "name": "account_number",
              "value": "1",
              "type": "string"
            },
            {
              "id": "69aa97ab-329a-41fc-ae98-ce186abe5b5d",
              "name": "email_count",
              "value": 5,
              "type": "number"
            },
            {
              "id": "cc7caca4-741d-48d8-83a8-50b3a48f79b2",
              "name": "include_sig",
              "value": true,
              "type": "boolean"
            },
            {
              "id": "94e19c68-0619-437d-8441-dc28905719e4",
              "name": "include_unsub",
              "value": false,
              "type": "boolean"
            },
            {
              "id": "a1c13a11-67f9-4f4f-a660-c14ad66d399c",
              "name": "email_region",
              "value": "",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [-1952, 144],
      "id": "8c71bd7f-70fe-4582-8df1-a9fea079cc3c",
      "name": "Manual Config"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "867074be-4fff-4db7-93a8-63aa1c9385be",
              "name": "account_number",
              "value": "={{ $json.query.account_number }}",
              "type": "number"
            },
            {
              "id": "e2db71c9-058a-47a1-a182-4672fa69c763",
              "name": "email_count",
              "value": "={{ $json.query.email_count }}",
              "type": "number"
            },
            {
              "id": "78be13fd-55da-45bf-998c-7768f942ffa0",
              "name": "include_sig",
              "value": "={{ $json.query.include_sig }}",
              "type": "boolean"
            },
            {
              "id": "a060c3b8-2dd9-43cc-9d7c-cda557049d12",
              "name": "include_unsub",
              "value": "={{ $json.query.include_unsub }}",
              "type": "boolean"
            },
            {
              "id": "ac1843c5-b1a6-49a7-a2d3-5d8c7f045cdf",
              "name": "email_region",
              "value": "={{ $json.query.email_region.trim() }}",
              "type": "string"
            },
            {
              "id": "c2fc24e4-2e2e-47ba-b58c-b5c2213fc13a",
              "name": "user_token",
              "value": "={{ $json.headers.authorization?.replace('Bearer ', '') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [-2320, -112],
      "id": "b6551aef-cdb1-479d-a412-5fedac6ea445",
      "name": "Webhook Config"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [-1344, 128],
      "id": "bac1f7be-46f6-482a-b700-1416e779cf4a",
      "name": "Merge5"
    },
    {
      "parameters": {
        "maxItems": "={{ $json.email_count }}"
      },
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [-544, -80],
      "id": "5a75f4ab-5f3b-4983-900a-ecd8c24e6a0f",
      "name": "Limit"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Refer to the following information to create an email message body which will be sent to {{ $json.receiver_business }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=You are an expert cold email copywriter specializing in creating effective, personalized cold outreach emails that get responses. Your goal is to draft compelling cold emails that feel human, demonstrate genuine interest, establish credibility, and drive the recipient towards a single, specific next step in the funnel.\n\nHere is a description of {{ $json.sender_business }}'s capabilities and company profile:\n{{ $json.sender_profile }}\n\nYour Task:\nGenerate a draft cold email based on the provided information for a specific outreach scenario. and you are writing a introductory message to:  {{ $json.receiver_business }} at {{ $json.receiver_address }}. Based on the following profile, write an email with the goal to {{ $json.intro_goal }}.\n\nHere is a description of {{ $json.receiver_business }}'s capabilities and company profile:\n{{ $json.receiver_profile }}\n\nPlease only output the following: \n[Subject line]\n[Message Body]\n{{ $json.include_sig ? \"Include the following Signature in the message body:  [ \" +  $json.email_sig + \" ]\" : \"Do not include a signature.\" }}\nDo not include any further suggestions or alternate subject lines. \n\nGuiding Principles:\nIntriguing Subject Line: Suggest 2-3 short, relevant, and intriguing subject line options that feel personal and encourage opening (e.g., \"quick question,\" \"idea for [Company Name],\" \"fellow [Alumni Group/Interest] founder\").\n\nHuman Touch: Write in a natural, human, and informal tone (like talking to a friend, but professionally appropriate). Use contractions, simple language, and potentially express relatable emotion (e.g., \"I'd love to...\", \"really appreciate\"). Avoid overly formal language (\"Dear Mr./Ms.\", corporate jargon).\n\nDeep Personalization: Go beyond just inserting [Name] and [Company]. Leverage the specific personalization points provided by the user (e.g., uncommon commonalities, recent company news, specific user pain points observed, shared connections/backgrounds). Show genuine research was done. Avoid generic compliments (\"love what you're doing\").\n\nReader-Centric: Frame the entire message around the recipient's potential needs, problems, or interests. Focus on \"you\" and \"your\" rather than \"I\" and \"we\". Tell the story as a quest to solve their problems. Begin the email by concisly complimenting something unique and positive about the recipient's business.\n\nExtreme Brevity: Keep the email concise, scannable, and easy to read quickly (ideally easily digestible on a mobile phone). Aim for 3-5 short paragraphs maximum. Every word must serve the purpose of moving towards the goal.\n\nEstablish Credibility Subtly: Weave in provided credibility points naturally (e.g., YC affiliation, notable customers/social proof, relevant sender experience, shared connections). Don't brag, but build trust. Do not say that you have been to the recipients business or seen their products for sale locally. Do not claim personal experiences that are not included in the company profile, i.e. being a veteran.\n\nWhen proposing further actions, such as meeting, take into account the distance between the {{ $json.sender_business }} and {{ $json.receiver_business }}. Do not propose a schedule for future communication unless a timeline is included in the goal. Stick with call, text, or email as means of communication. Do not offer to mail or send them items unless it is specifically mentioned in the goal. {{ $json.include_unsub ? \"Always include a simple, direct offer to be removed from your contact list (don't use words with negative connotations such as bother or unsubscribe).\" : \"Do not include an offer to be removed from your contact list.\" }} \n\nImportant!: Include a Single, Focused Goal & Clear Call to Action (The call to action could be replying to this email or a similar simple action)\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [1376, -64],
      "id": "96c93d1b-e0d5-4f57-8b87-fbb20944000f",
      "name": "Email Writer",
      "retryOnFail": true,
      "notes": "Always include a simple, direct offer to be removed from your contact list (don't use words with negative connotations such as bother or unsubscribe)."
    },
    {
      "parameters": {
        "model": "=openai/gpt-4.1-mini:online",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [256, 736],
      "id": "9ed01d66-7057-4e58-8fbc-03eaecfdffbc",
      "name": "OpenRouter Chat Model3",
      "credentials": {
        "openRouterApi": {
          "id": "Zxme10zMkcpc2LQh",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Write the profile of {{ $json.Title }} at {{ $json.Address }}",
        "options": {
          "systemMessage": "=You are an experienced business analyst tasked with creating a comprehensive company profile based on current live website content. Your goal is to provide an accurate, professional, and detailed summary of a business.\n\nHere is the URL you need to analyze:\n\n<company_url>\n{{ $json.URL }}\n</company_url>\n\nPlease follow these steps to create a business profile:\n\n1. Examine the main URL thoroughly, focusing on:\n   - Company name and taglines\n   - Products or services offered\n   - Company history and \"About Us\" information\n   - Mission statement and core values\n   - Contact information and locations\n   - Notable achievements and unique selling points\n\n2. Identify and examine up to 5 internal links within the main URL that provide additional company information. These may include:\n   - Product/service pages\n   - Team or leadership pages\n   - Blog posts or news articles\n   - Customer testimonials or case studies\n   Do not follow external links or social media profiles.\n\n3. Based on your findings, analyze the information you've gathered. Conduct your analysis within <company_analysis> tags, organizing your thoughts and compiling key information for each of the following profile sections:\n\n   a) Introduction to the company\n   b) Company history and milestones\n   c) Detailed description of main products or services\n   d) Company culture, values, and leadership\n   e) Market position, awards, and unique attributes\n\n   For each section:\n   - List relevant quotes from the website\n   - Summarize key points\n   - Note any information gaps\n\n   Aim to identify enough information to write 5-7 sentences for each paragraph in the final profile.\n\n4. After your analysis, create a 5-paragraph profile. Each paragraph should focus on a different aspect of the business, as outlined in step 3. Maintain a professional and objective tone throughout the profile. Do not include personal opinions or subjective assessments. Rely solely on the information provided on the website and its internal links.\n\n5. Count the number of sentences in each paragraph to ensure they meet the 5-7 sentence requirement. If a paragraph is too short or too long, adjust it accordingly.\n\n6. Present your final profile using the following format:\n\n<business_profile>\n<paragraph1>\n[First paragraph: 5-7 sentences introducing the company]\n</paragraph1>\n<paragraph2>\n[Second paragraph: 5-7 sentences on company history]\n</paragraph2>\n<paragraph3>\n[Third paragraph: 5-7 sentences describing products/services]\n</paragraph3>\n<paragraph4>\n[Fourth paragraph: 5-7 sentences on culture and values]\n</paragraph4>\n<paragraph5>\n[Fifth paragraph: 5-7 sentences on market position and conclusion]\n</paragraph5>\n</business_profile>\n\nImportant: In your final response, include ONLY the business profile paragraphs within the <business_profile> tags. Do not include your company analysis or any other analysis in the output.\n\nIf you encounter any difficulties accessing the website or finding sufficient information, respond with a profile containing as much information as you have available without addressing the missing portions. If no information is available to generate a profile, your complete output should be \"Insufficient information available at {{ $json.URL }}.\" with no other explanation."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [256, 864],
      "id": "9df2c1e1-6b98-4e24-95c7-8e4c41d8d7bc",
      "name": "Receiver Profile1"
    }
  ],
  "connections": {
    "Bulk Leads Webhook": {
      "main": [
        [
          {
            "node": "Bulk Webhook Config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Bulk Webhook Config": {
      "main": [
        [
          {
            "node": "Get Bulk Leads Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Bulk Leads Data": {
      "main": [
        [
          {
            "node": "Transform Bulk Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transform Bulk Data": {
      "main": [
        [
          {
            "node": "Bulk Merge Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Bulk Merge Data": {
      "main": [
        [
          {
            "node": "Get a row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking 'Test workflow'": {
      "main": [
        [
          {
            "node": "Manual Config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Config": {
      "main": [
        [
          {
            "node": "Sender Profile",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sender Profile": {
      "main": [
        [
          {
            "node": "sender_profile",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Receiver Profile": {
      "main": [
        [
          {
            "node": "receiver_profile",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Email Writer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "sender_profile": {
      "main": [
        [
          {
            "node": "Merge4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "receiver_profile": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a row": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "receiver_profile1": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update profile": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If gen_profile is empty": {
      "main": [
        [
          {
            "node": "Receiver Profile",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "receiver_profile1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Merge5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a row1": {
      "main": [
        [
          {
            "node": "If gen_profile is empty",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Config1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Config1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop": {
      "main": [
        [
          {
            "node": "Get a row1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create a row": {
      "main": [
        []
      ]
    },
    "Merge3": {
      "main": [
        [
          {
            "node": "Create a row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge4": {
      "main": [
        [
          {
            "node": "Loop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Webhook Config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Manual Config": {
      "main": [
        [
          {
            "node": "Get a row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook Config": {
      "main": [
        [
          {
            "node": "Get a row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge5": {
      "main": [
        [
          {
            "node": "Merge4",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Loop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Email Writer": {
      "main": [
        [
          {
            "node": "Structured Output Parser",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Receiver Profile1": {
      "main": [
        [
          {
            "node": "Update profile",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}